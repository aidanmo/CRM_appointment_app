Requirements Section E:

1. The name of this program is "Appointment Manager". It's primary use case is providing consulting organizations with
a desktop application that allows users to create, update, read, and delete appointments and customers. It's designed
to store this information in a SQL database so distributed offices across the world can access and modify this data.
The program also has the functionality of generating three different reports, which are designed to provide business
leadership with additional data when making decisions within the organization.

2.
Author: Aidan Morrison
Contact Information:
amor865@wgu.edu
815-608-9201
Application Version: 1.1
Date Created: 9/17/2022

3.
IntelliJ IDEA 2021.1.3 (Community Edition)
Build #IC-211.7628.21, built on June 30, 2021
Runtime version: 11.0.11+9-b1341.60 amd64
VM: OpenJDK 64-Bit Server VM by JetBrains s.r.o.
openjfx-11.0.2_windows-x64_bin-sdk

4.
a.Once loading the program the user is prompted with a login screen. Enter your user credentials and login to the
program by clicking login.
b.From main menu you can select between Customer Menu, Appointment Menu, Reports Menu, and Logout. Appointment and
Customer menus provide an interface for creating, reading, updating and deleting customer or appointment entries. While
Reports Menu provides an interface for generating three predefined reports.

5. A3f Custom Report: The Reports Menu offers Month Report which is provides a count of all appointments a specified
customer has in a specified month. This way the Consulting organization can keep track of the number of appointments
a customer has each month. This report is generated by simply selecting a customer name and month in the drop down boxes
followed by clicking the generate report button.

6.
mysql-connector-java-8.0.22
a. This mysql connector version was used due to it's ability to automatically convert localtime to utc timestamps when
storing LocalDateTimes in the database. In addition to this ability it also converts those timestamps in UTC time to the
user's timezone when retrieving appointment information from the database. This negates the need for coded conversion
methods leading to less bugs being introduced to the code.
